Texture2D tex : register(t0);            
Texture2D normalMap : register(t1);      
SamplerState samplerLinear : register(s0); 

struct PS_INPUT
{
    float4 Pos : SV_POSITION; 
    float3 Normal : NORMAL;    
    float3 Tangent : TANGENT;
    float2 TexCoords : TEXCOORD; 
};

float4 PS(PS_INPUT input) : SV_Target0
{
    float4 colour = tex.Sample(samplerLinear, input.TexCoords);

    float3 bitangent = cross(input.Normal, input.Tangent);

    float3x3 TBN = float3x3(
        normalize(input.Tangent), 
        normalize(bitangent), 
        normalize(input.Normal)
    );

    float3 normalTex = normalMap.Sample(samplerLinear, input.TexCoords).xyz;

    normalTex = normalize(normalTex * 2.0f - 1.0f);

    float3 worldNormal = normalize(mul(TBN, normalTex));

    float3 lightDir = normalize(float3(-0.5, -1.0, -0.5)); 
    float lightIntensity = saturate(dot(worldNormal, -lightDir));

    float3 finalColor = colour.rgb * lightIntensity;

    return float4(finalColor, 1.0); 
}

