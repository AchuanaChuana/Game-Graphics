cbuffer WaterParams
{
    float time;             
    float waveAmplitude;    
    float waveFrequency;   
    float waveSpeed;        
};

cbuffer staticMeshBuffer
{
    float4x4 W;             
    float4x4 VP;             
};

struct VS_INPUT
{
    float4 Pos : POSITION;   
    float3 Normal : NORMAL;   
    float3 Tangent : TANGENT; 
    float2 TexCoords : TEXCOORD;
};

struct PS_INPUT
{
    float4 Pos : SV_POSITION; 
    float3 Normal : NORMAL;  
    float3 Tangent : TANGENT; 
    float2 TexCoords : TEXCOORD; 
};

PS_INPUT VS(VS_INPUT input)
{
    PS_INPUT output;

     float3 originalPosition = input.Pos.xyz; 
    float3 dynamicNormal = float3(0.0, 1.0, 0.0); 

    float2 waveDir1 = normalize(float2(1.0, 0.0));  
    float2 waveDir2 = normalize(float2(0.0, 1.0));  

    float heightOffset = 0.0;
    float3 normalOffset = float3(0.0, 0.0, 0.0);

    float wave1 = waveAmplitude * sin(dot(waveDir1, originalPosition.xz) * waveFrequency + waveSpeed * time);
    heightOffset += wave1;
    normalOffset.x += -waveDir1.x * waveAmplitude * waveFrequency * cos(dot(waveDir1, originalPosition.xz) * waveFrequency + waveSpeed * time);
    normalOffset.z += -waveDir1.y * waveAmplitude * waveFrequency * cos(dot(waveDir1, originalPosition.xz) * waveFrequency + waveSpeed * time);

    float wave2 = waveAmplitude * 0.5 * sin(dot(waveDir2, originalPosition.xz) * waveFrequency * 1.5 + waveSpeed * 0.7 * time); 
    heightOffset += wave2;
    normalOffset.x += -waveDir2.x * waveAmplitude * 0.5 * waveFrequency * 1.5 * cos(dot(waveDir2, originalPosition.xz) * waveFrequency * 1.5 + waveSpeed * 0.7 * time);
    normalOffset.z += -waveDir2.y * waveAmplitude * 0.5 * waveFrequency * 1.5 * cos(dot(waveDir2, originalPosition.xz) * waveFrequency * 1.5 + waveSpeed * 0.7 * time);

    originalPosition.y += heightOffset;

    dynamicNormal = normalize(float3(normalOffset.x, 1.0, normalOffset.z));

    output.Pos = mul(float4(originalPosition, 1.0), W);
    output.Pos = mul(output.Pos, VP);

    output.Normal = dynamicNormal;
    output.Tangent = input.Tangent;
    output.TexCoords = input.TexCoords;

    return output;
}
